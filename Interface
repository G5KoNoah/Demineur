#include <SDL.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void initGridPlayer(SDL_Renderer* renderer);

int main()
{
	SDL_Window* window = NULL;
	SDL_Renderer* renderer = NULL;
	SDL_Color orange = { 255, 127, 40, 255 };
	int statut = EXIT_FAILURE;
	if (0 != SDL_Init(SDL_INIT_EVERYTHING))
	{
		fprintf(stderr, "Erreur SDL_Init : %s", SDL_GetError());
		goto Quit;
	}
	window = SDL_CreateWindow("SDL2", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED,
		640, 480, SDL_WINDOW_SHOWN);
	if (NULL == window)
	{
		fprintf(stderr, "Erreur SDL_CreateWindow : %s", SDL_GetError());
		goto Quit;
	}

	renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
	if (NULL == renderer)
	{
		fprintf(stderr, "Erreur SDL_CreateRenderer : %s", SDL_GetError());
		goto Quit;
	}

	SDL_SetWindowTitle(window, "Demineur");
	SDL_RaiseWindow(window);
	statut = EXIT_SUCCESS;
	initGridPlayer(renderer);
	SDL_Event event;
	SDL_bool quit = SDL_FALSE;

	clock_t deltaTime = 0;
	unsigned int frames = 0;
	

	while (!quit) {
		int begin = SDL_GetTicks();

		SDL_WaitEvent(&event);
		if (event.type == SDL_QUIT)
			quit = SDL_TRUE;
		if (event.type == SDL_MOUSEBUTTONUP && event.button.button == SDL_BUTTON_LEFT)
			printf("clic gauche");

		deltaTime += SDL_GetTicks() - begin;
		frames++;
		printf("%d\n", 1000 / deltaTime);
	}

Quit:
	if (NULL != renderer)
		SDL_DestroyRenderer(renderer);
	if (NULL != window)
		SDL_DestroyWindow(window);
	SDL_Quit();
	return statut;
}

void initGridPlayer(SDL_Renderer* renderer) {
    SDL_Color drakOrange = { 255, 100, 80, 255 };
    SDL_Color rose = { 200, 50, 150, 255 };

    for (int i = 0; i < 10; i = i++) {
        for (int j = 0; j < 10; j++) {
            SDL_Rect rect = { j + (30 * j), i + (30 * i), 30,30 };
            if (j % 2 == 0) {
                SDL_SetRenderDrawColor(renderer, rose.r, rose.g, rose.b, rose.a);
            }else {
                SDL_SetRenderDrawColor(renderer, drakOrange.r, drakOrange.g, drakOrange.b, drakOrange.a);
            }
            SDL_RenderFillRect(renderer, &rect);
            SDL_RenderPresent(renderer);
        }
    }
}


void game() 
{
    //INIT

    while (1) 
    {
        //EVENT
        //UPDATE
        //RENDER
    }

    //DESTROY

}
